apiVersion: v1
kind: ServiceAccount
metadata:
  name: rook-obc-backup-tool
  namespace: rook-ceph

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rook-obc-backup-tool
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get"]
- apiGroups: ["objectbucket.io"]
  resources: ["objectbucketclaims"]
  verbs: ["get", "list"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rook-obc-backup-tool
subjects:
- kind: ServiceAccount
  name: rook-obc-backup-tool
  namespace: rook-ceph
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rook-obc-backup-tool

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: rook-obc-backup-tool
  namespace: rook-ceph
data:
  REMOTE_S3_HOST: "$S3_SERVER"
  REMOTE_S3_BUCKET_SUFFIX: "$SUFFIX"
  REMOTE_S3_BUCKET_PREFIX: "$PREFIX"

---

apiVersion: v1
kind: Secret
metadata:
  name: rook-obc-backup-tool
  namespace: rook-ceph
data:
  REMOTE_S3_ACCESS_KEY: "$ACCESS_KEY_ID"
  REMOTE_S3_SECRET_KEY: "$SECRET_ACCESS_KEY"
type: Opaque
---

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: rook-obc-backup-tool
  namespace: rook-ceph
spec:
  schedule: "@daily"
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: rook-obc-backup-tool
          restartPolicy: OnFailure
          containers:
            - name: backup
              image: deinstapel/rook-obc-backup:v1
              envFrom:
              - secretRef:
                  name: rook-obc-backup-tool
              - configMapRef:
                  name: rook-obc-backup-tool
            
          

