apiVersion: v1
kind: ServiceAccount
metadata:
  name: rook-obc-backup-tool
  namespace: rook-ceph

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rook-obc-backup-tool
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get"]
- apiGroups: ["objectbucket.io"]
  resources: ["objectbucketclaims"]
  verbs: ["get", "list", "create"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: rook-obc-backup-tool
subjects:
- kind: ServiceAccount
  name: rook-obc-backup-tool
  namespace: rook-ceph
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rook-obc-backup-tool

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: rook-obc-backup-tool
  namespace: rook-ceph
data:
  SOURCE_S3_URL: "https://source.example.com"
  SOURCE_KUBECONFIG: "/source_kubeconfig"
  TARGET_S3_URL: "https://target.example.com"
  TARGET_KUBECONFIG: ""
  TARGET_BUCKET_PREFIX: "prefix"
  TARGET_BUCKET_NAMESPACE: "rook-ceph"
  TARGET_STORAGE_CLASS_NAME: "spinning-rust"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: rook-obc-backup-tool-source-kubeconfig
  namespace: rook-ceph
data:
  kubeconfig: ""

---

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: rook-obc-backup-tool
  namespace: rook-ceph
spec:
  schedule: "@daily"
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: rook-obc-backup-tool
          restartPolicy: OnFailure
          volumes:
            - name: source-kubeconfig
              configMap:
                name: rook-obc-backup-tool-source-kubeconfig
          containers:
            - name: backup
              image: deinstapel/rook-obc-backup:v1
              volumeMounts:
                - name: config-volume
                  mountPath: /source_kubeconfig
              envFrom:
              - configMapRef:
                  name: rook-obc-backup-tool



